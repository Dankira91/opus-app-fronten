// ⚠️ IMPORTANTE: REEMPLAZA ESTA URL CON LA URL /exec DE TU DESPLIEGUE DE APPS SCRIPT
const APPS_SCRIPT_API_URL = "https://script.google.com/macros/s/AKfycbwkpR4yJsr0xbB4zTK4wRRSoI3ghtnRvHJdDLBhG_5PcbbzmOQaASfpmqFJnAHBppN-/exec"; 

/**
 * Función que Google llama después del login exitoso.
 */
function handleCredentialResponse(response) {
    const idToken = response.credential;
    const userPayload = parseJwt(idToken);
    
    if (userPayload && userPayload.email) {
        document.querySelector('.login-container').innerHTML = '<h2>Verificando tu acceso...</h2>';
        
        // Llamar al Apps Script para iniciar sesión y cargar datos.
        // **NOTA:** En este modelo (Ejecutar como: Usuario que accede), Apps Script usa 
        // la sesión de Google, no el email pasado por aquí, pero lo mantenemos 
        // para tenerlo disponible en el frontend.
        cargarSistemaDesdeAppsScript(userPayload.email); 

    } else {
        mostrarError("Error al obtener el email de Google.");
    }
}

/**
 * Llama a la API de Apps Script (el backend)
 */
function cargarSistemaDesdeAppsScript(email) {
    const formData = new URLSearchParams();
    formData.append('email', email); // Solo para referencia en el frontend
    formData.append('action', 'loadData'); 

    fetch(APPS_SCRIPT_API_URL, {
        method: 'POST', 
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, 
        body: formData
    })
    .then(response => response.json()) 
    .then(data => {
        if (data.status === 'success') {
            mostrarPlataforma(email, data.data); 
        } else if (data.status === 'auth_required') {
            // ** Manejo de la Autorización por Primera Vez **
            mostrarPantallaAutorizacion(data.message); 
        } else {
            mostrarError("Error al cargar el sistema: " + data.message);
        }
    })
    .catch(error => {
        console.error('Error de red o CORS:', error);
        mostrarError("Error de conexión con el servidor de Google. (Verifique CORS y URL)");
    });
}

function mostrarPlataforma(email, systemData) {
    const body = document.querySelector('body');
    body.innerHTML = `
        <header>
            <h1>Opus App GS - Plataforma</h1>
            <p>Conectado como: <strong>${email}</strong></p>
        </header>
        <main>
            <h2>Tus Datos Personales (Guardados en TU Drive)</h2>
            <div id="mis-datos">${systemData.individual}</div>
            <button onclick="guardarNuevoDato()">Guardar Nuevo Dato</button>
        </main>
        <footer><button onclick="signOut()">Cerrar Sesión</button></footer>
    `;
}

function mostrarPantallaAutorizacion(message) {
    const mainContainer = document.querySelector('main');
    mainContainer.innerHTML = `
        <h2>🚨 Permiso Requerido</h2>
        <p>${message}</p>
        <p>Tu sistema Opus App necesita permiso para crear y guardar tus datos en **tu propio Google Drive**. </p>
        <p>Por favor, haz clic en el botón para autorizar el acceso. Serás redirigido a una nueva pestaña.</p>
        
        <button onclick="window.open('${APPS_SCRIPT_API_URL}', '_blank').focus();">
            1. Autorizar mi Cuenta de Google Drive
        </button>

        <p style="margin-top: 20px;">**IMPORTANTE:** Después de autorizar, regresa a esta página y haz clic abajo:</p>
        <button onclick="window.location.reload()">2. Ya Autorizaste, Cargar Sistema</button>
    `;
}

// Lógica para guardar un nuevo dato
function guardarNuevoDato() {
    const nuevoDato = prompt("Introduce un nuevo dato:");
    if (!nuevoDato) return;

    const formData = new URLSearchParams();
    formData.append('action', 'saveData');
    formData.append('data', nuevoDato);

    fetch(APPS_SCRIPT_API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === 'success') {
            alert("Dato guardado con éxito en tu Drive.");
            window.location.reload(); // Recargar para ver los datos actualizados
        } else {
            mostrarError("Error al guardar: " + data.message);
        }
    })
    .catch(error => {
        mostrarError("Error al comunicarse con el servidor.");
    });
}

// Funciones de utilidad (parseJwt y signOut)
function parseJwt(token) {
    try {
        // ... (código de parseo JWT - es un poco largo, busca "parseJwt function javascript" si lo necesitas)
        const base64Url = token.split('.')[1];
        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));
        return JSON.parse(jsonPayload);
    } catch (e) { return null; }
}
function mostrarError(mensaje) { /* ... */ }
function signOut() { /* ... */ }